name: Website Health Monitor

on:
  schedule:
    # RuleazƒÉ la fiecare 6 ore
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Permite rulare manualƒÉ
  push:
    branches: [ main, master ]
    paths:
      - 'sites.json'
      - 'website_monitor.py'

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
    
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: üì¶ Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: üîç Run Website Monitor (non-blocking)
      id: monitor
      run: |
        python website_monitor.py || echo "monitor script exited non-zero"
      continue-on-error: true
    
    - name: üìä Upload JSON Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: monitor-report-json
        path: monitor_report.json
        retention-days: 30
    
    - name: üìù Upload Markdown Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: monitor-report-md
        path: monitor_report.md
        retention-days: 30
    
    - name: üìà Comment PR with Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('monitor_report.json', 'utf8'));
          const summary = report.summary;
          
          const body = `## üîç Website Monitor Results
          
          **Summary:**
          - ‚úÖ Healthy: ${summary.healthy_sites}/${summary.total_sites}
          - üìä Uptime: ${summary.uptime_percentage}%
          
          ${summary.unhealthy_sites > 0 ? '‚ö†Ô∏è **Warning:** Some sites are unhealthy!' : '‚úÖ All sites are healthy!'}
          
          [View full report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
    
    - name: üö¶ Set job conclusion (always success)
      if: always()
      run: echo "Job finished. Reports uploaded."

